{"version":3,"sources":["Moon.js","Planet.js","namegen.js","Star.js","App.js","index.js"],"names":["Moon","props","className","Planet","useState","moon","setMoon","color","setColor","React","useEffect","randGen","randomSeed","create","seed","generateColor","red","green","blue","console","log","Grid","container","direction","justify","alignItems","style","animation","planetNumber","speed","backgroundColor","namegen","count","name","comp","i","il","vowels","mtx","fn","length","ret","c","push","Star","open","setOpen","planets","setPlanets","setName","xPosition","yPosition","modalBody","marginTop","marginBottom","left","top","width","size","height","onClick","s","numOfPlanets","newPlanets","intBetween","charAt","toUpperCase","slice","Modal","onClose","randomNumber","App","xCoordinate","setXCoordinate","yCoordinate","setYCoordinate","stars","setStars","newStars","x","y","offset","window","addEventListener","e","key","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c3aba95.chunk.js","sourcesContent":["import React from 'react';\n\n//This component is simply the moon that some planets have. they are all the same size and color, hence the simplistic nature.\nfunction Moon(props) {\n    return (\n        <div className=\"moon\"></div>\n    );\n}\n\nexport default Moon;","import React, { useState } from 'react';\nimport randomSeed from 'random-seed';\nimport Moon from './Moon';\nimport { Grid } from '@material-ui/core';\n\n// This is a planet component, which is displayed in the modal window.\nfunction Planet(props) {\n    const [moon, setMoon] = useState('');\n    const[color, setColor] = useState('');\n\n    // When the component is mounted, the color is generated. It is also decided whether the planet has a moon. \n    // There is a 1/2 chance of that happening.\n    React.useEffect(() => {\n        let randGen = randomSeed.create(props.seed);\n        function generateColor() {\n            const red = randGen(255);\n            const green = randGen(255);\n            const blue = randGen(255);\n    \n            return {red: red, green: green, blue: blue};\n        }\n         const numberOfMoons = randGen(2);\n         \n         if(numberOfMoons === 1) {\n            setMoon(<Moon />)\n         }\n         setColor(generateColor())\n         console.log(generateColor());\n    }, [props.seed])\n\n    \n\n    return (\n        <Grid \n            container \n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <div className=\"planet-moon\" style={{animation: `spinAroundStar${props.planetNumber} ${props.speed}s linear infinite`}}>\n                <div className=\"planet\" style={{backgroundColor: `rgb(${color.red}, ${color.green}, ${color.blue})`}}></div>\n                {moon}\n            </div>\n        </Grid>\n        \n    )   \n}\n\nexport default Planet;","import randomSeed from 'random-seed';\n\n// This function genrates a random star name. This code was written by hbi99 on Github.\nfunction namegen(count, seed) {\t\n    let randGen = randomSeed.create(seed)\n    \n\tvar vowels = {  '1': [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"],\n\t\t\t'2': [\"a\", \"e\", \"o\", \"u\"],\n\t\t\t'3': [\"br\", \"cr\", \"dr\", \"fr\", \"gr\", \"pr\", \"str\", \"tr\", \"bl\", \"cl\", \"fl\", \"gl\", \"pl\", \"sl\", \"sc\", \"sk\", \"sm\", \"sn\", \"sp\", \"st\", \"sw\", \"ch\", \"sh\", \"th\", \"wh\"],\n\t\t\t'4': [\"ae\", \"ai\", \"ao\", \"au\", \"a\", \"ay\", \"ea\", \"ei\", \"eo\", \"eu\", \"e\", \"ey\", \"ua\", \"ue\", \"ui\", \"uo\", \"u\", \"uy\", \"ia\", \"ie\", \"iu\", \"io\", \"iy\", \"oa\", \"oe\", \"ou\", \"oi\", \"o\", \"oy\"],\n\t\t\t'5': [\"turn\", \"ter\", \"nus\", \"rus\", \"tania\", \"hiri\", \"hines\", \"gawa\", \"nides\", \"carro\", \"rilia\", \"stea\", \"lia\", \"lea\", \"ria\", \"nov\", \"phus\", \"mia\", \"nerth\", \"wei\", \"ruta\", \"tov\", \"zuno\", \"vis\", \"lara\", \"nia\", \"liv\", \"tera\", \"gantu\", \"yama\", \"tune\", \"ter\", \"nus\", \"cury\", \"bos\", \"pra\", \"thea\", \"nope\", \"tis\", \"clite\"],\n\t\t\t'6': [\"una\", \"ion\", \"iea\", \"iri\", \"illes\", \"ides\", \"agua\", \"olla\", \"inda\", \"eshan\", \"oria\", \"ilia\", \"erth\", \"arth\", \"orth\", \"oth\", \"illon\", \"ichi\", \"ov\", \"arvis\", \"ara\", \"ars\", \"yke\", \"yria\", \"onoe\", \"ippe\", \"osie\", \"one\", \"ore\", \"ade\", \"adus\", \"urn\", \"ypso\", \"ora\", \"iuq\", \"orix\", \"apus\", \"ion\", \"eon\", \"eron\", \"ao\", \"omia\"] },\n\t\tmtx = [[1,1, 2,2, 5,5],\n\t\t\t[2,2, 3,3, 6,6],\n\t\t\t[3,3, 4,4, 5,5],\n\t\t\t[4,4, 3,3, 6,6],\n\t\t\t[3,3, 4,4, 2,2, 5,5],\n\t\t\t[2,2, 1,1, 3,3, 6,6],\n\t\t\t[3,3, 4,4, 2,2, 5,5],\n\t\t\t[4,4, 3,3, 1,1, 6,6],\n\t\t\t[3,3, 4,4, 1,1, 4,4, 5,5],\n\t\t\t[4,4, 1,1, 4,4, 3,3, 6,6]],\n\t\tfn = function(i) { return randGen(vowels[i].length); },\n\t\tret = [],\n\t\tname,\n\t\tcomp,\n\t\ti, il,\n\t\tc = 0;\n\t\n\tfor (; c<count; c++) {\n\t\tname = '';\n\t\tcomp = mtx[c % mtx.length];\n\t\tfor (i=0, il=comp.length/2; i<il; i++) {\n\t\t\tname += vowels[comp[i*2]][fn(comp[i*2+1])];\n\t\t}\n\t\tret.push(name);\n\t}\n\n\treturn ret;\n};\n\nexport default namegen;","import React, { useState } from 'react';\nimport './styles.css';\nimport Modal from '@material-ui/core/Modal';\nimport Grid from '@material-ui/core/Grid';\nimport randomSeed from 'random-seed';\nimport Planet from './Planet';\nimport namegen from './namegen';\n\n// These are the stars displayed in the App component.\nfunction Star(props) {\n    const [open, setOpen] = useState(false);\n    const [planets, setPlanets] = useState([]);\n    const [name, setName] = useState('');\n    const xPosition = props.xPosition;\n    const yPosition = props.yPosition;\n\n    // Utility function to capitalize the names of the stars.\n    function capitalizeFirstLetter(s) {\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n\n    // Triggered when a star is clicked. Generates the planets and name of the star, as well as opens the modal window.\n    function handleOpen() {\n        setOpen(true);\n        let randGen = randomSeed.create(props.seed)\n        const numOfPlanets = randGen(5);\n        let newPlanets = []\n        for(let i = 0; i < numOfPlanets; i++) {\n            randGen = randomSeed.create(props.seed + `, ${i}`)\n            let speed = randGen.intBetween(10, 15);\n            newPlanets.push(\n                <Planet seed={props.seed + `, ${i}`} planetNumber={i} speed={speed} />\n            )\n        }\n        setPlanets(newPlanets);\n        setName(capitalizeFirstLetter(namegen(1, props.seed)[0]));\n    }\n\n    // Closes the modal window.\n    function handleClose() {\n        setOpen(false);\n    }\n\n    // This is the modal window that displays the star, the planets orbiting it, and the name.\n    const modalBody = (\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" className=\"modal\">\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <h1>{name}</h1>\n                <div className=\"star-planet\" style={{marginTop: (35 * planets.length) + 'px', marginBottom: (35 * planets.length) + 'px'}}>\n                    <div className=\"modal-star\"></div>\n                    {planets}\n                </div>\n             </Grid>\n        </Grid>\n    )\n\n    return (\n        <>\n            <div \n                className=\"star\" \n                style={{ \n                    left: xPosition + '%', \n                    top: yPosition + '%', \n                    width: props.size + 'px', \n                    height: props.size + 'px',\n                    backgroundColor: `rgb(${props.color.red}, ${props.color.green}, ${props.color.blue})` \n                }}\n                onClick={handleOpen}\n            >\n            </div>\n            <Modal\n                open={open}\n                onClose={handleClose}    \n            >\n                {modalBody}\n            </Modal>\n        </>\n    );\n}\n\nexport default Star;","import React, { useState } from 'react';\nimport Star from './Star';\nimport \"./styles.css\";\nimport randomSeed from 'random-seed';\n\nlet randomNumber = randomSeed.create('0, 0');\n\n// This component displays stars and allows the user to navigate the universe. \nfunction App() {\n  const [xCoordinate, setXCoordinate] = useState(0);\n  const [yCoordinate, setYCoordinate] = useState(0);\n  const [stars, setStars] = useState([]);\n\n  // Iterates over screen in tenths. Creates a star at every stop with randomized color, \n  // size, and offset(to make their positions appear less uniform.)\n  function generateStars() {\n    let newStars = [];\n    for(let x = xCoordinate; x < xCoordinate + 100; x+=10) {\n      for(let y = yCoordinate; y < yCoordinate + 100; y+=10) {\n        randomNumber = randomSeed.create(`${x}, ${y}`);\n        let offset = randomNumber(30);\n        let size = randomNumber(20);\n        newStars.push(\n          <Star \n            xPosition={x > 0 ? x - xCoordinate + offset : x + (-1 * xCoordinate) + offset} \n            yPosition={y > 0 ? y - yCoordinate + offset : y + (-1 * yCoordinate) + offset}\n            size={size}\n            color={generateColor()}\n            seed={`${x}, ${y}`}\n          />\n        );\n      }\n     }\n    setStars(newStars); \n  }\n\n  // generateStars is called once the component is mounted, as well as whenever the coordinates change.\n  React.useEffect(generateStars, [xCoordinate, yCoordinate]);\n\n  // Arrow keys control the change of x and y. This is done by 10s in order to keep synchronous with nested for loops in generateStars.\n  // Begins listening whenever the component is mounted.\n  React.useEffect(() => {\n    window.addEventListener('keydown', (e) => {  \n      console.log('eventListener');\n      switch(e.key) {\n        case 'ArrowUp':\n          setYCoordinate(y => y - 10);       \n          break;\n        case 'ArrowDown':\n          setYCoordinate(y => y + 10);        \n          break;\n        case 'ArrowLeft':\n          setXCoordinate(x => x - 10);\n          break;\n        case 'ArrowRight':\n          setXCoordinate(x => x + 10);\n          break;\n        default:\n      }\n    })\n  }, [])\n   \n  // Function that returns rgb values to be passed to each star component.\n  function generateColor() {\n    const red = randomNumber(255);\n    const green = randomNumber(255);\n    const blue = randomNumber(255);\n\n    return {red: red, green: green, blue: blue};\n  }\n\n  return (\n    <div className=\"App\" id=\"target\">  \n      <p className=\"coordinates\">{`${xCoordinate}, ${yCoordinate * -1}`}</p>\n      {stars}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}